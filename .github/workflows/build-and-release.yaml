name: release

on:
  push:
    tags:
        - "*"
  pull_request:
    branches:
        - main
  workflow_dispatch:

jobs:
  build:
    env:
      REGISTRY: ghcr.io
      TRIBES_MCP_IMAGE_NAME: ${{ github.repository }}-mcp
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: current

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Install Cartesi CLI
        run: npm install -g @cartesi/cli@2.0.0-alpha.8

      - name: Check system requirements
        run: cartesi doctor

      - name: Running tests
        run: make test

      - name: Log in to Container registry
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for MCP
        id: meta-mcp
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.TRIBES_MCP_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short

      - name: Build Tribes MCP image
        if: startsWith(github.ref, 'refs/tags/')
        id: push-mcp
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/Dockerfile.mcp
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-mcp.outputs.tags }}
          labels: ${{ steps.meta-mcp.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Tribes MCP image (test only)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/Dockerfile.mcp
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta-mcp.outputs.tags }}
          labels: ${{ steps.meta-mcp.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
      - name: Build Tribes Rollup initial snapshot
        run: make build

      - name: Create artifact archive for initial snapshot
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          tar -czf tribes-snapshot.tar.gz .cartesi/image/*
          sha256sum tribes-snapshot.tar.gz > tribes-snapshot.tar.gz.sha256

      - name: Upload build artifacts
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v4
        with:
          name: tribes-snapshot
          path: |
            tribes-snapshot.tar.gz
            tribes-snapshot.tar.gz.sha256
          retention-days: 30

      - name: Generate artifact attestation for MCP
        if: startsWith(github.ref, 'refs/tags/') && steps.push-mcp.outputs.digest != ''
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.TRIBES_MCP_IMAGE_NAME }}
          subject-digest: ${{ steps.push-mcp.outputs.digest }}
          push-to-registry: true

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p release-assets
          find artifacts -name "*.tar.gz" -exec cp {} release-assets/ \;
          find artifacts -name "*.sha256" -exec cp {} release-assets/ \;

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ contains(github.ref, '-rc') }}
          files: release-assets/*
          fail_on_unmatched_files: trueÂ 