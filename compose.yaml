name: local_node
x-env: &env
  CARTESI_LOG_LEVEL: info
  CARTESI_AUTH_KIND: ${CARTESI_AUTH_KIND}
  CARTESI_BLOCKCHAIN_ID: ${CARTESI_BLOCKCHAIN_ID}
  CARTESI_AUTH_MNEMONIC_FILE: ${CARTESI_AUTH_MNEMONIC_FILE}
  CARTESI_SNAPSHOTS_DIR: /var/lib/cartesi-rollups-node/snapshots
  CARTESI_BLOCKCHAIN_WS_ENDPOINT: ${CARTESI_BLOCKCHAIN_WS_ENDPOINT}
  CARTESI_BLOCKCHAIN_HTTP_ENDPOINT: ${CARTESI_BLOCKCHAIN_HTTP_ENDPOINT}
  CARTESI_CONTRACTS_INPUT_BOX_ADDRESS: ${CARTESI_CONTRACTS_INPUT_BOX_ADDRESS}
  CARTESI_CONTRACTS_AUTHORITY_FACTORY_ADDRESS: ${CARTESI_CONTRACTS_AUTHORITY_FACTORY_ADDRESS}
  CARTESI_CONTRACTS_APPLICATION_FACTORY_ADDRESS: ${CARTESI_CONTRACTS_APPLICATION_FACTORY_ADDRESS}
  CARTESI_CONTRACTS_SELF_HOSTED_APPLICATION_FACTORY_ADDRESS: ${CARTESI_CONTRACTS_SELF_HOSTED_APPLICATION_FACTORY_ADDRESS}
  CARTESI_DATABASE_CONNECTION: ${CARTESI_DATABASE_CONNECTION}

secrets:
  mnemonic:
    file: ./secrets/mnemonic

services:
  database:
    container_name: cartesi-rollups-database
    image: cartesi/rollups-database:0.12.0-alpha.20
    environment:
      POSTGRES_PASSWORD: password
    networks:
      - default
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres || exit 1
      timeout: 1s
      interval: 10s
      retries: 5
      start_period: 10s
      start_interval: 200ms

  evmreader:
    container_name: cartesi-rollups-evm-reader
    image: cartesi/rollups-runtime:0.12.0-alpha.20
    command: cartesi-rollups-evm-reader
    depends_on:
      database:
        condition: service_healthy
    networks:
      - default
    ports:
      - "10001:10001"
    environment:
      <<: *env

  advancer:
    container_name: cartesi-rollups-advancer
    image: cartesi/rollups-runtime:0.12.0-alpha.20
    command: cartesi-rollups-advancer
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - node_data:/var/lib/cartesi-rollups-node/data
      - .cartesi:/var/lib/cartesi-rollups-node/snapshots
    networks:
      - default
    ports:
      - "10002:10002"
      - "10012:10012"
    environment:
      <<: *env

  validator:
    container_name: cartesi-rollups-validator
    image: cartesi/rollups-runtime:0.12.0-alpha.20
    command: cartesi-rollups-validator
    depends_on:
      database:
        condition: service_healthy
    networks:
      - default
    ports:
      - "10003:10003"
    environment:
      <<: *env

  claimer:
    container_name: cartesi-rollups-claimer
    image: cartesi/rollups-runtime:0.12.0-alpha.20
    command: cartesi-rollups-claimer
    depends_on:
      database:
        condition: service_healthy
    networks:
      - default
    ports:
      - "10004:10004"
    environment:
      <<: *env
    secrets:
      - mnemonic

  jsonrpc-api:
    container_name: cartesi-rollups-jsonrpc-api
    image: cartesi/rollups-runtime:0.12.0-alpha.20
    command: cartesi-rollups-jsonrpc-api
    depends_on:
      database:
        condition: service_healthy
    networks:
      - default
    ports:
      - "10005:10005"
      - "10011:10011"
    environment:
      <<: *env

volumes:
  node_data: