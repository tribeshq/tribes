// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package root

import (
	"github.com/tribeshq/tribes/internal/infra/cartesi/handler/advance"
	"github.com/tribeshq/tribes/internal/infra/cartesi/handler/inspect"
	"github.com/tribeshq/tribes/internal/infra/repository"
)

// Injectors from wire.go:

func NewHandlers(repo repository.Repository) (*Handlers, error) {
	orderAdvanceHandlers := advance.NewOrderAdvanceHandlers(repo, repo, repo)
	userAdvanceHandlers := advance.NewUserAdvanceHandlers(repo)
	socialAccountAdvanceHandlers := advance.NewSocialAccountAdvanceHandlers(repo)
	auctionAdvanceHandlers := advance.NewAuctionAdvanceHandlers(repo, repo, repo)
	orderInspectHandlers := inspect.NewOrderInspectHandlers(repo)
	userInspectHandlers := inspect.NewUserInspectHandlers(repo)
	socialAccountInspectHandlers := inspect.NewSocialAccountInspectHandlers(repo)
	auctionInspectHandlers := inspect.NewAuctionInspectHandlers(repo)
	handlers := &Handlers{
		OrderAdvanceHandlers:   orderAdvanceHandlers,
		UserAdvanceHandlers:    userAdvanceHandlers,
		SocialAccountsHandlers: socialAccountAdvanceHandlers,
		AuctionAdvanceHandlers: auctionAdvanceHandlers,
		OrderInspectHandlers:   orderInspectHandlers,
		UserInspectHandlers:    userInspectHandlers,
		SocialAccountHandlers:  socialAccountInspectHandlers,
		AuctionInspectHandlers: auctionInspectHandlers,
	}
	return handlers, nil
}

// wire.go:

// Handlers contains all handler dependencies
type Handlers struct {
	// Advance handlers
	OrderAdvanceHandlers   *advance.OrderAdvanceHandlers
	UserAdvanceHandlers    *advance.UserAdvanceHandlers
	SocialAccountsHandlers *advance.SocialAccountAdvanceHandlers
	AuctionAdvanceHandlers *advance.AuctionAdvanceHandlers

	// Inspect handlers
	OrderInspectHandlers   *inspect.OrderInspectHandlers
	UserInspectHandlers    *inspect.UserInspectHandlers
	SocialAccountHandlers  *inspect.SocialAccountInspectHandlers
	AuctionInspectHandlers *inspect.AuctionInspectHandlers
}
